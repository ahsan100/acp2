[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package.underscore._;\nSpiderable = Package.spiderable.Spiderable;\nFastClick = Package.fastclick.FastClick;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nAutoForm = Package['aldeed:autoform'].AutoForm;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nGAnalytics = Package['datariot:ganalytics'].GAnalytics;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nmoment = Package['momentjs:moment'].moment;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"layouts\":{\"template.About.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/layouts/template.About.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"About\");                                                                                         // 2\nTemplate[\"About\"] = new Template(\"Template.About\", (function() {                                                       // 3\n  var view = this;                                                                                                     // 4\n  return [ Spacebars.include(view.lookupTemplate(\"Header\")), HTML.Raw('\\n  <main>\\n    <div class=\"billboard\">\\n      <h2>Create ESM magic</h2>\\n    </div>\\n\\n    <div class=\"main-layout\">\\n      <h3>About</h3>\\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque accumsan, justo vitae tristique finibus, velit nisl molestie enim, ac pretium orci eros vel elit. Proin at neque in arcu vehicula vestibulum eu et velit. Nullam quis massa sed mi aliquam aliquam eget laoreet quam. Duis vehicula in ante at dictum. Vivamus rhoncus non purus in convallis. Mauris lobortis mollis nisi, a iaculis elit. Pellentesque vel velit nec arcu cursus varius. Integer maximus molestie maximus.</p>\\n    </div>\\n  </main>\\n  '), Spacebars.include(view.lookupTemplate(\"Footer\")) ];\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.HomeLayout.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/layouts/template.HomeLayout.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"HomeLayout\");                                                                                    // 2\nTemplate[\"HomeLayout\"] = new Template(\"Template.HomeLayout\", (function() {                                             // 3\n  var view = this;                                                                                                     // 4\n  return [ Spacebars.include(view.lookupTemplate(\"Header\")), HTML.Raw('\\n  <main>\\n    <div class=\"billboard\">\\n      <h2>Create Advanced Experience Sampling Studies. The Easy Way.</h2>\\n    </div>\\n\\n    <div class=\"main-layout\">\\n      <p class=\"primary\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque accumsan, justo vitae tristique finibus, velit nisl molestie enim, ac pretium orci eros vel elit. Proin at neque in arcu vehicula vestibulum eu et velit.</p>\\n\\n      <div class=\"row\">\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-flag\"></i>ESM Creator</h4>\\n          <p>Create your own <em>Experience Sampling</em> studies using ESM Creator. Based on proven technology ...</p>\\n        </div>\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-magic\"></i>Easy To Use</h4>\\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque accumsan, justo vitae tristique finibus.</p>\\n        </div>\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-lock\"></i>Secure</h4>\\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque accumsan, justo vitae tristique finibus.</p>\\n        </div>\\n      </div>\\n\\n      <div class=\"row\">\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-magic\"></i>Advanced Configuration</h4>\\n          <p>Build </p>\\n        </div>\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-flag\"></i>Open Source</h4>\\n          <p>ESM Creator is completely free to use, and its source code is <a href=\"https://www.github.com\">publicly available</a>.</p>\\n        </div>\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-lock\"></i>Secure</h4>\\n        </div>\\n      </div>\\n\\n      <h3>Experience Sampling</h3>\\n      <p>Curabitur sit amet libero laoreet, consequat ex id, scelerisque purus. Nam fermentum purus nec ante viverra, ut placerat orci rutrum. Vestibulum accumsan odio dui, eget blandit neque auctor vitae. Integer sed dignissim nibh, vitae tristique nisi.</p>\\n    </div>\\n  </main>\\n  '), Spacebars.include(view.lookupTemplate(\"Footer\")) ];\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.MainLayout.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/layouts/template.MainLayout.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"MainLayout\");                                                                                    // 2\nTemplate[\"MainLayout\"] = new Template(\"Template.MainLayout\", (function() {                                             // 3\n  var view = this;                                                                                                     // 4\n  return [ Spacebars.include(view.lookupTemplate(\"Header\")), \"\\n  \", HTML.MAIN({                                       // 5\n    \"class\": \"main-layout\"                                                                                             // 6\n  }, \"\\n    \", Blaze._TemplateWith(function() {                                                                        // 7\n    return {                                                                                                           // 8\n      template: Spacebars.call(view.lookup(\"main\"))                                                                    // 9\n    };                                                                                                                 // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.include(function() {                                                                              // 12\n      return Spacebars.call(Template.__dynamic);                                                                       // 13\n    });                                                                                                                // 14\n  }), \"\\n  \"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"Footer\")) ];                                             // 15\n}));                                                                                                                   // 16\n                                                                                                                       // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"partials\":{\"template.Footer.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/partials/template.Footer.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"Footer\");                                                                                        // 2\nTemplate[\"Footer\"] = new Template(\"Template.Footer\", (function() {                                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.Raw(\"<footer>\\n    <br>\\n    <div>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\\n    </div>\\n  </footer>\");\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Header.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/partials/template.Header.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"Header\");                                                                                        // 2\nTemplate[\"Header\"] = new Template(\"Template.Header\", (function() {                                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.HEADER(\"\\n    \", HTML.NAV({                                                                              // 5\n    \"class\": \"main-nav\"                                                                                                // 6\n  }, \"\\n      \", HTML.Raw('<h1><a href=\"/\">Home</a></h1>'), \"\\n\\n      \", HTML.Raw('<h1><a href=\"/about\">About</a></h1>'), \"\\n\\n      \", HTML.Raw('<h1><a href=\"/questionnaire-overview\">Questionnaire overview</a></h1>'), \"\\n\\n      \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n    \"), \"\\n  \");\n}));                                                                                                                   // 8\n                                                                                                                       // 9\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.SideNav.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/partials/template.SideNav.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"SideNav\");                                                                                       // 2\nTemplate[\"SideNav\"] = new Template(\"Template.SideNav\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.Raw('<nav class=\"side-nav\">\\n      <li>\\n        <a href=\"/questionnaire-overview\">Overview</a>\\n      </li>\\n      <li>\\n        <a href=\"/questionnaire-sensors\">Sensors</a>\\n      </li>\\n      <li>\\n        <a href=\"/questionnaire-configuration\">Configuation</a>\\n      </li>\\n  </nav>');\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.SingleQuestionnaireNav.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/partials/template.SingleQuestionnaireNav.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"SingleQuestionnaireNav\");                                                                        // 2\nTemplate[\"SingleQuestionnaireNav\"] = new Template(\"Template.SingleQuestionnaireNav\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.NAV({                                                                                                    // 5\n    \"class\": \"questionnaire-nav\"                                                                                       // 6\n  }, \"\\n    \", HTML.LI(\"\\n      \", HTML.A({                                                                            // 7\n    href: function() {                                                                                                 // 8\n      return [ \"/questionnaire/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"_id\")) ];            // 9\n    }                                                                                                                  // 10\n  }, \"Overview\"), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      \", HTML.A({                                                    // 11\n    href: function() {                                                                                                 // 12\n      return [ \"/questionnaire/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"_id\")), \"/sensor\" ];\n    }                                                                                                                  // 14\n  }, \"Sensors\"), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      \", HTML.A({                                                     // 15\n    href: function() {                                                                                                 // 16\n      return [ \"/questionnaire/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"_id\")), \"/configuration\" ];\n    }                                                                                                                  // 18\n  }, \"Configuation\"), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      \", HTML.A({                                                // 19\n    href: function() {                                                                                                 // 20\n      return [ \"/questionnaire/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"_id\")), \"/export\" ];\n    }                                                                                                                  // 22\n  }, \"Export\"), \"\\n    \"), HTML.Raw('\\n    <li>\\n      <a href=\"/questionnaire-overview\">Return to Overview</a>\\n    </li>\\n  '));\n}));                                                                                                                   // 24\n                                                                                                                       // 25\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"SingleQuestionnaireNav.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/partials/SingleQuestionnaireNav.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.SingleQuestionnaireNav.onCreated(function () {                                                                // 1\n  var self = this;                                                                                                     // 2\n  self.autorun(function () {                                                                                           // 3\n    var id = FlowRouter.getParam('id');                                                                                // 4\n    self.subscribe('singleQuestionnaire', id);                                                                         // 5\n  });                                                                                                                  // 6\n});                                                                                                                    // 7\n                                                                                                                       //\nTemplate.SingleQuestionnaireNav.helpers({                                                                              // 9\n  questionnaire: function () {                                                                                         // 10\n    function questionnaire() {                                                                                         // 10\n      var id = FlowRouter.getParam('id');                                                                              // 11\n      return Questionnaires.findOne({ _id: id });                                                                      // 12\n    }                                                                                                                  // 13\n                                                                                                                       //\n    return questionnaire;                                                                                              // 10\n  }()                                                                                                                  // 10\n});                                                                                                                    // 9\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"questionnaires\":{\"template.NewQuestionnaire.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/template.NewQuestionnaire.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"NewQuestionnaire\");                                                                              // 2\nTemplate[\"NewQuestionnaire\"] = new Template(\"Template.NewQuestionnaire\", (function() {                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"recipe\"                                                                                                  // 6\n  }, HTML.Raw(\"\\n    <h3>New questionnaire</h3>\\n\\n    \"), Blaze._TemplateWith(function() {                            // 7\n    return {                                                                                                           // 8\n      collection: Spacebars.call(\"Questionnaires\"),                                                                    // 9\n      id: Spacebars.call(\"updateQuestionnaireId\"),                                                                     // 10\n      type: Spacebars.call(\"insert\"),                                                                                  // 11\n      \"class\": Spacebars.call(\"new-recipe-form\")                                                                       // 12\n    };                                                                                                                 // 13\n  }, function() {                                                                                                      // 14\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 15\n      return [ \"\\n\\n      \", Blaze._TemplateWith(function() {                                                          // 16\n        return {                                                                                                       // 17\n          name: Spacebars.call(\"name\")                                                                                 // 18\n        };                                                                                                             // 19\n      }, function() {                                                                                                  // 20\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 21\n      }), \"\\n\\n      \", Blaze._TemplateWith(function() {                                                               // 22\n        return {                                                                                                       // 23\n          name: Spacebars.call(\"description\")                                                                          // 24\n        };                                                                                                             // 25\n      }, function() {                                                                                                  // 26\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 27\n      }), \"\\n\\n      \", Blaze._TemplateWith(function() {                                                               // 28\n        return {                                                                                                       // 29\n          name: Spacebars.call(\"author\")                                                                               // 30\n        };                                                                                                             // 31\n      }, function() {                                                                                                  // 32\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 33\n      }), \"\\n\\n      \", Blaze._TemplateWith(function() {                                                               // 34\n        return {                                                                                                       // 35\n          name: Spacebars.call(\"createdAt\")                                                                            // 36\n        };                                                                                                             // 37\n      }, function() {                                                                                                  // 38\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 39\n      }), \"\\n\\n      \", HTML.DIV(\"\\n        \", HTML.BUTTON({                                                           // 40\n        type: \"submit\"                                                                                                 // 41\n      }, \"Add Questionnaire\"), \"\\n      \"), \"\\n    \" ];                                                                // 42\n    });                                                                                                                // 43\n  }), HTML.Raw('\\n\\n\\n    <!-- {{> quickForm collection=\"Questionnaires\" id=\"insertRecipeForm\" type=\"insert\" class=\"new-recipe-form\"}} -->\\n  '));\n}));                                                                                                                   // 45\n                                                                                                                       // 46\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.QuestionnaireSingle.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/template.QuestionnaireSingle.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"QuestionnaireSingle\");                                                                           // 2\nTemplate[\"QuestionnaireSingle\"] = new Template(\"Template.QuestionnaireSingle\", (function() {                           // 3\n  var view = this;                                                                                                     // 4\n  return [ HTML.H1(Blaze.View(\"lookup:questionnaire.name\", function() {                                                // 5\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"name\"));                                    // 6\n  })), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaireNav\")), \"\\n\\n  \", HTML.DIV({                // 7\n    \"class\": \"new-recipe-container\"                                                                                    // 8\n  }, \"\\n    \", Blaze._TemplateWith(function() {                                                                        // 9\n    return {                                                                                                           // 10\n      collection: Spacebars.call(\"Questionnaires\"),                                                                    // 11\n      id: Spacebars.call(\"updateQuestionnaireId\"),                                                                     // 12\n      type: Spacebars.call(\"update\"),                                                                                  // 13\n      doc: Spacebars.call(view.lookup(\"questionnaire\"))                                                                // 14\n    };                                                                                                                 // 15\n  }, function() {                                                                                                      // 16\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 17\n      return [ \"\\n\\n    \", Blaze._TemplateWith(function() {                                                            // 18\n        return {                                                                                                       // 19\n          name: Spacebars.call(\"name\"),                                                                                // 20\n          template: Spacebars.call(\"bootstrap3-horizontal\"),                                                           // 21\n          \"label-class\": Spacebars.call(\"col-sm-3\"),                                                                   // 22\n          \"input-col-class\": Spacebars.call(\"col-sm-9\")                                                                // 23\n        };                                                                                                             // 24\n      }, function() {                                                                                                  // 25\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 26\n      }), \"\\n\\n    \", Blaze._TemplateWith(function() {                                                                 // 27\n        return {                                                                                                       // 28\n          name: Spacebars.call(\"description\"),                                                                         // 29\n          template: Spacebars.call(\"bootstrap3-horizontal\"),                                                           // 30\n          \"label-class\": Spacebars.call(\"col-sm-3\"),                                                                   // 31\n          \"input-col-class\": Spacebars.call(\"col-sm-9\")                                                                // 32\n        };                                                                                                             // 33\n      }, function() {                                                                                                  // 34\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 35\n      }), \"\\n\\n\\n    \", HTML.LABEL(\"Questions\"), \"\\n\\n    \", Blaze._TemplateWith(function() {                          // 36\n        return {                                                                                                       // 37\n          name: Spacebars.call(\"questions\")                                                                            // 38\n        };                                                                                                             // 39\n      }, function() {                                                                                                  // 40\n        return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {                                  // 41\n          return [ \"\\n      \", Blaze._TemplateWith(function() {                                                        // 42\n            return {                                                                                                   // 43\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"name\")),                                // 44\n              template: Spacebars.call(\"bootstrap3-horizontal\"),                                                       // 45\n              \"label-class\": Spacebars.call(\"col-sm-3\"),                                                               // 46\n              \"input-col-class\": Spacebars.call(\"col-sm-9\")                                                            // 47\n            };                                                                                                         // 48\n          }, function() {                                                                                              // 49\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                             // 50\n          }), \"\\n\\n      \", Blaze._TemplateWith(function() {                                                           // 51\n            return {                                                                                                   // 52\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"instructions\")),                        // 53\n              template: Spacebars.call(\"bootstrap3-horizontal\"),                                                       // 54\n              \"label-class\": Spacebars.call(\"col-sm-3\"),                                                               // 55\n              \"input-col-class\": Spacebars.call(\"col-sm-9\")                                                            // 56\n            };                                                                                                         // 57\n          }, function() {                                                                                              // 58\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                             // 59\n          }), \"\\n\\n      \", Blaze._TemplateWith(function() {                                                           // 60\n            return {                                                                                                   // 61\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"timeout\")),                             // 62\n              template: Spacebars.call(\"bootstrap3-horizontal\"),                                                       // 63\n              \"label-class\": Spacebars.call(\"col-sm-3\"),                                                               // 64\n              \"input-col-class\": Spacebars.call(\"col-sm-9\")                                                            // 65\n            };                                                                                                         // 66\n          }, function() {                                                                                              // 67\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                             // 68\n          }), \"\\n\\n      \", HTML.Comment('\\n      <label class=\"help\">Question</label>{{> afFieldInput name=this.current.name}}\\n      <label class=\"help\">Question instruction</label>{{> afFieldInput name=this.current.instructions}}\\n      <label class=\"help\">Question timeout</label>{{> afFieldInput name=this.current.timeout}}\\n       '), \"\\n\\n      \", Blaze._TemplateWith(function() {\n            return {                                                                                                   // 70\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"type\")),                                // 71\n              template: Spacebars.call(\"bootstrap3-horizontal\"),                                                       // 72\n              \"label-class\": Spacebars.call(\"col-sm-3\"),                                                               // 73\n              \"input-col-class\": Spacebars.call(\"col-sm-9\")                                                            // 74\n            };                                                                                                         // 75\n          }, function() {                                                                                              // 76\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                             // 77\n          }), \"\\n\\n      \", Blaze.If(function() {                                                                      // 78\n            return Spacebars.dataMustache(view.lookup(\"afFieldValueIs\"), Spacebars.kw({                                // 79\n              name: Spacebars.dot(view.lookup(\".\"), \"current\", \"type\"),                                                // 80\n              value: \"Multiple Choice\"                                                                                 // 81\n            }));                                                                                                       // 82\n          }, function() {                                                                                              // 83\n            return [ \"\\n        \", Blaze._TemplateWith(function() {                                                    // 84\n              return {                                                                                                 // 85\n                name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"checkboxes\"))                         // 86\n              };                                                                                                       // 87\n            }, function() {                                                                                            // 88\n              return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {                            // 89\n                return [ \"\\n          \", Blaze._TemplateWith(function() {                                              // 90\n                  return {                                                                                             // 91\n                    name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"option\")),                        // 92\n                    template: Spacebars.call(\"bootstrap3-horizontal\"),                                                 // 93\n                    \"label-class\": Spacebars.call(\"col-sm-2 col-sm-offset-3\"),                                         // 94\n                    \"input-col-class\": Spacebars.call(\"col-sm-6\")                                                      // 95\n                  };                                                                                                   // 96\n                }, function() {                                                                                        // 97\n                  return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                       // 98\n                }), \"\\n          \", HTML.BUTTON({                                                                      // 99\n                  \"class\": \"btn btn-primary autoform-remove-item\",                                                     // 100\n                  \"data-autoform-field\": \"items\"                                                                       // 101\n                }, \"x\"), \"\\n        \" ];                                                                               // 102\n              });                                                                                                      // 103\n            }), \"\\n        \", HTML.BUTTON({                                                                            // 104\n              \"class\": \"btn btn-primary autoform-add-item col-sm-offset-5 col-sm-7\",                                   // 105\n              \"data-autoform-field\": function() {                                                                      // 106\n                return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"current\", \"checkboxes\"));                   // 107\n              }                                                                                                        // 108\n            }, \"Add option\"), \"\\n      \" ];                                                                            // 109\n          }), \"\\n      \", Blaze.If(function() {                                                                        // 110\n            return Spacebars.dataMustache(view.lookup(\"afFieldValueIs\"), Spacebars.kw({                                // 111\n              name: Spacebars.dot(view.lookup(\".\"), \"current\", \"type\"),                                                // 112\n              value: \"Slider\"                                                                                          // 113\n            }));                                                                                                       // 114\n          }, function() {                                                                                              // 115\n            return [ \"\\n        \", Blaze._TemplateWith(function() {                                                    // 116\n              return {                                                                                                 // 117\n                name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"minValue\")),                          // 118\n                template: Spacebars.call(\"bootstrap3-horizontal\"),                                                     // 119\n                \"label-class\": Spacebars.call(\"col-sm-4 col-sm-offset-3\"),                                             // 120\n                \"input-col-class\": Spacebars.call(\"col-sm-5\")                                                          // 121\n              };                                                                                                       // 122\n            }, function() {                                                                                            // 123\n              return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                           // 124\n            }), \"\\n        \", Blaze._TemplateWith(function() {                                                         // 125\n              return {                                                                                                 // 126\n                name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"maxValue\")),                          // 127\n                template: Spacebars.call(\"bootstrap3-horizontal\"),                                                     // 128\n                \"label-class\": Spacebars.call(\"col-sm-4 col-sm-offset-3\"),                                             // 129\n                \"input-col-class\": Spacebars.call(\"col-sm-5\")                                                          // 130\n              };                                                                                                       // 131\n            }, function() {                                                                                            // 132\n              return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                           // 133\n            }), \"\\n      \" ];                                                                                          // 134\n          }), \"\\n\\n      \", HTML.BR(), \"\\n\\n      \", HTML.BUTTON({                                                     // 135\n            \"class\": \"btn btn-primary autoform-remove-item\",                                                           // 136\n            \"data-autoform-field\": \"items\"                                                                             // 137\n          }, \"Remove question\"), \"\\n\\n      \", HTML.HR({                                                               // 138\n            style: \"border-bottom:1px solid #000;\"                                                                     // 139\n          }), \"\\n    \" ];                                                                                              // 140\n        });                                                                                                            // 141\n      }), \"\\n\\n    \", HTML.BUTTON({                                                                                    // 142\n        \"class\": \"btn btn-primary autoform-add-item\",                                                                  // 143\n        \"data-autoform-field\": \"questions\"                                                                             // 144\n      }, \"Add question\"), \"\\n\\n    \", HTML.BUTTON({                                                                    // 145\n        type: \"submit\"                                                                                                 // 146\n      }, \"Submit\"), \"\\n    \" ];                                                                                        // 147\n    });                                                                                                                // 148\n  }), \"\\n  \") ];                                                                                                       // 149\n}));                                                                                                                   // 150\n                                                                                                                       // 151\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.QuestionnaireSingleConfig.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/template.QuestionnaireSingleConfig.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"QuestionnaireSingleConfig\");                                                                     // 2\nTemplate[\"QuestionnaireSingleConfig\"] = new Template(\"Template.QuestionnaireSingleConfig\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return [ HTML.H1(Blaze.View(\"lookup:questionnaire.name\", function() {                                                // 5\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"name\"));                                    // 6\n  })), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaireNav\")), \"\\n\\n  \", HTML.DIV({                // 7\n    \"class\": \"new-recipe-container\"                                                                                    // 8\n  }, \"\\n    \", HTML.Raw(\"<h2>Configuration</h2>\"), \"\\n\\n    \", HTML.Raw(\"<h3>Questionnaire start and end date</h3>\"), \"\\n    \", HTML.Raw('<!-- {{> quickForm collection=\"Questionnaires\" id=\"updateQuestionnaireId\" type=\"update\" doc=questionnaire class=\"new-recipe-form\"}} -->'), \"\\n\\n    \", Blaze._TemplateWith(function() {\n    return {                                                                                                           // 10\n      collection: Spacebars.call(\"Questionnaires\"),                                                                    // 11\n      id: Spacebars.call(\"updateQuestionnaireId\"),                                                                     // 12\n      type: Spacebars.call(\"update\"),                                                                                  // 13\n      doc: Spacebars.call(view.lookup(\"questionnaire\"))                                                                // 14\n    };                                                                                                                 // 15\n  }, function() {                                                                                                      // 16\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 17\n      return [ \"\\n      \", Blaze._TemplateWith(function() {                                                            // 18\n        return {                                                                                                       // 19\n          name: Spacebars.call(\"configuration\")                                                                        // 20\n        };                                                                                                             // 21\n      }, function() {                                                                                                  // 22\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 23\n      }), \"\\n\\n      \", HTML.DIV(\"\\n        \", HTML.BUTTON({                                                           // 24\n        type: \"submit\"                                                                                                 // 25\n      }, \"Submit\"), \"\\n      \"), \"\\n\\n    \" ];                                                                         // 26\n    });                                                                                                                // 27\n  }), \"\\n\\n  \") ];                                                                                                     // 28\n}));                                                                                                                   // 29\n                                                                                                                       // 30\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.QuestionnaireSingleExport.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/template.QuestionnaireSingleExport.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"QuestionnaireSingleExport\");                                                                     // 2\nTemplate[\"QuestionnaireSingleExport\"] = new Template(\"Template.QuestionnaireSingleExport\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return [ HTML.H1(Blaze.View(\"lookup:questionnaire.name\", function() {                                                // 5\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"name\"));                                    // 6\n  })), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaireNav\")), HTML.Raw('\\n\\n  <div>\\n    <h2>Export Questionnaire</h2>\\n\\n    <p>Test questionnaire in AWARE.</p>\\n\\n    <button>Export to AWARE</button>\\n\\n    <div id=\"qrcode\"></div>\\n\\n  </div>') ];\n}));                                                                                                                   // 8\n                                                                                                                       // 9\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.QuestionnaireSingleSensor.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/template.QuestionnaireSingleSensor.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"QuestionnaireSingleSensor\");                                                                     // 2\nTemplate[\"QuestionnaireSingleSensor\"] = new Template(\"Template.QuestionnaireSingleSensor\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return [ HTML.H1(Blaze.View(\"lookup:questionnaire.name\", function() {                                                // 5\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"name\"));                                    // 6\n  })), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaireNav\")), \"\\n\\n  \", HTML.DIV({                // 7\n    \"class\": \"new-recipe-container\"                                                                                    // 8\n  }, \"\\n    \", HTML.Raw(\"<h2>Sensor magic</h2>\"), \"\\n\\n    \", Blaze._TemplateWith(function() {                         // 9\n    return {                                                                                                           // 10\n      collection: Spacebars.call(\"Questionnaires\"),                                                                    // 11\n      type: Spacebars.call(\"update\"),                                                                                  // 12\n      doc: Spacebars.call(view.lookup(\".\")),                                                                           // 13\n      id: Spacebars.call(\"FieldValueIsForm\")                                                                           // 14\n    };                                                                                                                 // 15\n  }, function() {                                                                                                      // 16\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 17\n      return [ \"\\n\\n      \", Blaze._TemplateWith(function() {                                                          // 18\n        return {                                                                                                       // 19\n          name: Spacebars.call(\"sensors\")                                                                              // 20\n        };                                                                                                             // 21\n      }, function() {                                                                                                  // 22\n        return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {                                  // 23\n          return [ \"\\n          \", Blaze._TemplateWith(function() {                                                    // 24\n            return {                                                                                                   // 25\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"sensorType\"))                           // 26\n            };                                                                                                         // 27\n          }, function() {                                                                                              // 28\n            return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));                                             // 29\n          }), \"\\n          \", Blaze._TemplateWith(function() {                                                         // 30\n            return {                                                                                                   // 31\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"sensorActive\"))                         // 32\n            };                                                                                                         // 33\n          }, function() {                                                                                              // 34\n            return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));                                             // 35\n          }), \"\\n      \" ];                                                                                            // 36\n        });                                                                                                            // 37\n      }), \"\\n\\n\", HTML.Comment('\\n\\n      {{> afQuickField name=\"GUCCI.$.sensorActive\" noselect=true }}\\n\\n      {{> afQuickField name=\"CHANEL\" noselect=true }}\\n\\n      {{> afQuickField name=\"GUCCI\" noselect=true }}\\n\\n      {{#each sensors}}\\n\\n        <h3>{{this.type}}</h3>\\n\\n\\n\\n        {{#if afFieldValueIs name=\"sensorType\" value=\"GUCCI\"}}\\n           {{> afQuickField name=\"shotsTaken\"}}\\n        {{/if}}\\n\\n\\n        {{> afQuickField name=\"sensors.$.sensorActive\" noselect=true }}\\n\\n        {{#if afFieldValueIs type=\"CHANEL\" value=true}}\\n          {{> afQuickField name=\"sensors.$.frequency\" value=this.frequency}}\\n        {{/if}}\\n      {{/each}}\\n\\n      {{#if afFieldValueIs name=\"sensors.$.sensorType\" value=\"CHANEL\"}}\\n        {{> afQuickField name=\"frequency\"}}\\n      {{/if}}\\n'), \"\\n      \", HTML.DIV(\"\\n        \", HTML.BUTTON({\n        type: \"submit\"                                                                                                 // 39\n      }, \"Submit\"), \"\\n      \"), \"\\n    \" ];                                                                           // 40\n    });                                                                                                                // 41\n  }), \"\\n  \") ];                                                                                                       // 42\n}));                                                                                                                   // 43\n                                                                                                                       // 44\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Questionnaires.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/template.Questionnaires.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"Questionnaires\");                                                                                // 2\nTemplate[\"Questionnaires\"] = new Template(\"Template.Questionnaires\", (function() {                                     // 3\n  var view = this;                                                                                                     // 4\n  return [ HTML.SECTION({                                                                                              // 5\n    \"class\": \"questionnaires\"                                                                                          // 6\n  }, \"\\n    \", Blaze.If(function() {                                                                                   // 7\n    return Spacebars.call(view.templateInstance().subscriptionsReady());                                               // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n      \", Blaze.Each(function() {                                                                       // 10\n      return Spacebars.call(view.lookup(\"questionnaires\"));                                                            // 11\n    }, function() {                                                                                                    // 12\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaire\")), \"\\n      \" ];              // 13\n    }), \"\\n    \" ];                                                                                                    // 14\n  }, function() {                                                                                                      // 15\n    return [ \"\\n      \", HTML.P(\"Loading\"), \"\\n    \" ];                                                                // 16\n  }), \"\\n  \"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"NewQuestionnaire\")) ];                                   // 17\n}));                                                                                                                   // 18\n                                                                                                                       // 19\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.SingleQuestionnaire.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/template.SingleQuestionnaire.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"SingleQuestionnaire\");                                                                           // 2\nTemplate[\"SingleQuestionnaire\"] = new Template(\"Template.SingleQuestionnaire\", (function() {                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.ARTICLE({                                                                                                // 5\n    \"class\": \"recipe\"                                                                                                  // 6\n  }, \"\\n    \", HTML.H3(Blaze.View(\"lookup:name\", function() {                                                          // 7\n    return Spacebars.mustache(view.lookup(\"name\"));                                                                    // 8\n  })), \"\\n    \", HTML.P(Blaze.View(\"lookup:description\", function() {                                                  // 9\n    return Spacebars.mustache(view.lookup(\"description\"));                                                             // 10\n  })), \"\\n    \", HTML.P({                                                                                              // 11\n    \"class\": \"meta\"                                                                                                    // 12\n  }, \"Created \", Blaze.View(\"lookup:formatDate\", function() {                                                          // 13\n    return Spacebars.mustache(view.lookup(\"formatDate\"), view.lookup(\"createdAt\"));                                    // 14\n  }), \".\"), \"\\n\\n    \", Blaze.View(\"lookup:nrQuestionnaires\", function() {                                             // 15\n    return Spacebars.mustache(view.lookup(\"nrQuestionnaires\"));                                                        // 16\n  }), HTML.Raw('\\n    <!-- <p>\\n      {{#each questions}}\\n        <span class=\"ingredient\">{{name}} - {{type}}</span>\\n      {{/each}}\\n    </p> -->\\n    '), HTML.A({\n    href: function() {                                                                                                 // 18\n      return [ \"/questionnaire/\", Spacebars.mustache(view.lookup(\"_id\")) ];                                            // 19\n    }                                                                                                                  // 20\n  }, \"View Details\"), HTML.Raw('\\n\\n    <i class=\"fa fa-trash\"></i>\\n  '));                                            // 21\n}));                                                                                                                   // 22\n                                                                                                                       // 23\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"QuestionnaireSingle.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/QuestionnaireSingle.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.QuestionnaireSingle.onCreated(function () {                                                                   // 1\n  var self = this;                                                                                                     // 2\n  self.autorun(function () {                                                                                           // 3\n    var id = FlowRouter.getParam('id');                                                                                // 4\n    self.subscribe('singleQuestionnaire', id);                                                                         // 5\n  });                                                                                                                  // 6\n});                                                                                                                    // 7\n                                                                                                                       //\nTemplate.QuestionnaireSingle.helpers({                                                                                 // 9\n  questionnaire: function () {                                                                                         // 10\n    function questionnaire() {                                                                                         // 10\n      var id = FlowRouter.getParam('id');                                                                              // 11\n      return Questionnaires.findOne({ _id: id });                                                                      // 12\n    }                                                                                                                  // 13\n                                                                                                                       //\n    return questionnaire;                                                                                              // 10\n  }(),                                                                                                                 // 10\n  updateQuestionnaireId: function () {                                                                                 // 14\n    function updateQuestionnaireId() {                                                                                 // 14\n      var id = FlowRouter.getParam('id');                                                                              // 15\n      return Questionnaires.findOne({ _id: id });                                                                      // 16\n    }                                                                                                                  // 17\n                                                                                                                       //\n    return updateQuestionnaireId;                                                                                      // 14\n  }()                                                                                                                  // 14\n});                                                                                                                    // 9\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"QuestionnaireSingleConfig.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/QuestionnaireSingleConfig.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.QuestionnaireSingleConfig.onCreated(function () {                                                             // 1\n  var self = this;                                                                                                     // 2\n  self.autorun(function () {                                                                                           // 3\n    var id = FlowRouter.getParam('id');                                                                                // 4\n    self.subscribe('singleQuestionnaire', id);                                                                         // 5\n  });                                                                                                                  // 6\n});                                                                                                                    // 7\n                                                                                                                       //\nTemplate.QuestionnaireSingleConfig.helpers({                                                                           // 9\n  questionnaire: function () {                                                                                         // 10\n    function questionnaire() {                                                                                         // 10\n      var id = FlowRouter.getParam('id');                                                                              // 11\n      return Questionnaires.findOne({ _id: id });                                                                      // 12\n    }                                                                                                                  // 13\n                                                                                                                       //\n    return questionnaire;                                                                                              // 10\n  }(),                                                                                                                 // 10\n  updateQuestionnaireId: function () {                                                                                 // 14\n    function updateQuestionnaireId() {                                                                                 // 14\n      var id = FlowRouter.getParam('id');                                                                              // 15\n      return Questionnaires.findOne({ _id: id });                                                                      // 16\n    }                                                                                                                  // 17\n                                                                                                                       //\n    return updateQuestionnaireId;                                                                                      // 14\n  }()                                                                                                                  // 14\n});                                                                                                                    // 9\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"QuestionnaireSingleExport.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/QuestionnaireSingleExport.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.QuestionnaireSingleExport.onCreated(function () {                                                             // 1\n  var self = this;                                                                                                     // 2\n  self.autorun(function () {                                                                                           // 3\n    var id = FlowRouter.getParam('id');                                                                                // 4\n    self.subscribe('singleQuestionnaire', id);                                                                         // 5\n  });                                                                                                                  // 6\n});                                                                                                                    // 7\n                                                                                                                       //\nTemplate.QuestionnaireSingleExport.onRendered(function () {                                                            // 9\n  $('#qrcode').qrcode({ text: 'http://www.google.com' });                                                              // 10\n});                                                                                                                    // 11\n                                                                                                                       //\nTemplate.QuestionnaireSingleExport.helpers({                                                                           // 13\n  questionnaire: function () {                                                                                         // 14\n    function questionnaire() {                                                                                         // 14\n      var id = FlowRouter.getParam('id');                                                                              // 15\n      return Questionnaires.findOne({ _id: id });                                                                      // 16\n    }                                                                                                                  // 17\n                                                                                                                       //\n    return questionnaire;                                                                                              // 14\n  }()                                                                                                                  // 14\n});                                                                                                                    // 13\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"QuestionnaireSingleJSON.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/QuestionnaireSingleJSON.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"QuestionnaireSingleSensor.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/QuestionnaireSingleSensor.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.QuestionnaireSingleSensor.onCreated(function () {                                                             // 1\n  var self = this;                                                                                                     // 2\n  self.autorun(function () {                                                                                           // 3\n    var id = FlowRouter.getParam('id');                                                                                // 4\n    self.subscribe('singleQuestionnaire', id);                                                                         // 5\n  });                                                                                                                  // 6\n});                                                                                                                    // 7\n                                                                                                                       //\nTemplate.QuestionnaireSingleSensor.helpers({                                                                           // 9\n  questionnaire: function () {                                                                                         // 10\n    function questionnaire() {                                                                                         // 10\n      var id = FlowRouter.getParam('id');                                                                              // 11\n      return Questionnaires.findOne({ _id: id });                                                                      // 12\n    }                                                                                                                  // 13\n                                                                                                                       //\n    return questionnaire;                                                                                              // 10\n  }(),                                                                                                                 // 10\n  updateQuestionnaireId: function () {                                                                                 // 14\n    function updateQuestionnaireId() {                                                                                 // 14\n      var id = FlowRouter.getParam('id');                                                                              // 15\n      return Questionnaires.findOne({ _id: id });                                                                      // 16\n    }                                                                                                                  // 17\n                                                                                                                       //\n    return updateQuestionnaireId;                                                                                      // 14\n  }()                                                                                                                  // 14\n});                                                                                                                    // 9\n                                                                                                                       //\nTemplate.registerHelper(\"currentFieldValue\", function (fieldName) {                                                    // 20\n  return AutoForm.getFieldValue(\"reactiveCurrentValueForm\", fieldName) || \"not selected\";                              // 21\n});                                                                                                                    // 22\n                                                                                                                       //\nTemplate.registerHelper(\"currentFieldValue2\", function (fieldName) {                                                   // 24\n  return AutoForm.getFieldValue(fieldName) || \"empty\";                                                                 // 25\n});                                                                                                                    // 26\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Questionnaires.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/Questionnaires.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.Questionnaires.onCreated(function () {                                                                        // 1\n  var self = this;                                                                                                     // 2\n  self.autorun(function () {                                                                                           // 3\n    self.subscribe('questionnaires');                                                                                  // 4\n  });                                                                                                                  // 5\n});                                                                                                                    // 6\n                                                                                                                       //\nTemplate.Questionnaires.helpers({                                                                                      // 8\n  questionnaires: function () {                                                                                        // 9\n    function questionnaires() {                                                                                        // 9\n      return Questionnaires.find({});                                                                                  // 10\n    }                                                                                                                  // 11\n                                                                                                                       //\n    return questionnaires;                                                                                             // 9\n  }(),                                                                                                                 // 9\n  updateQuestionnaireId: function () {                                                                                 // 12\n    function updateQuestionnaireId() {                                                                                 // 12\n      return this._id;                                                                                                 // 13\n    }                                                                                                                  // 14\n                                                                                                                       //\n    return updateQuestionnaireId;                                                                                      // 12\n  }()                                                                                                                  // 12\n});                                                                                                                    // 8\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"SingleQuestionnaire.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/questionnaires/SingleQuestionnaire.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.SingleQuestionnaire.events({                                                                                  // 1\n  'click .fa-trash': function () {                                                                                     // 2\n    function clickFaTrash() {                                                                                          // 2\n      Meteor.call('deleteQuestionnaire', this._id);                                                                    // 3\n    }                                                                                                                  // 4\n                                                                                                                       //\n    return clickFaTrash;                                                                                               // 2\n  }()                                                                                                                  // 2\n});                                                                                                                    // 1\n                                                                                                                       //\nTemplate.SingleQuestionnaire.helpers({                                                                                 // 14\n  nrQuestionnaires: function () {                                                                                      // 15\n    function nrQuestionnaires() {                                                                                      // 15\n      var id = FlowRouter.getParam('id');                                                                              // 16\n                                                                                                                       //\n      var questionnaire = Questionnaires.findOne({ _id: id });                                                         // 18\n                                                                                                                       //\n      console.log(questionnaire + \"TEST\");                                                                             // 20\n                                                                                                                       //\n      return Questionnaires.findOne({ _id: id });                                                                      // 23\n    }                                                                                                                  // 24\n                                                                                                                       //\n    return nrQuestionnaires;                                                                                           // 15\n  }()                                                                                                                  // 15\n});                                                                                                                    // 14\n                                                                                                                       //\nTemplate.registerHelper('formatDate', function (date) {                                                                // 28\n  return moment(date).format('Do of MMMM, YYYY');                                                                      // 29\n});                                                                                                                    // 30\n                                                                                                                       //\nTemplate.QuestionnaireSingleSensor.helpers({                                                                           // 34\n  questionnaire: function () {                                                                                         // 35\n    function questionnaire() {                                                                                         // 35\n      var id = FlowRouter.getParam('id');                                                                              // 36\n      return Questionnaires.findOne({ _id: id });                                                                      // 37\n    }                                                                                                                  // 38\n                                                                                                                       //\n    return questionnaire;                                                                                              // 35\n  }(),                                                                                                                 // 35\n  updateQuestionnaireId: function () {                                                                                 // 39\n    function updateQuestionnaireId() {                                                                                 // 39\n      var id = FlowRouter.getParam('id');                                                                              // 40\n      return Questionnaires.findOne({ _id: id });                                                                      // 41\n    }                                                                                                                  // 42\n                                                                                                                       //\n    return updateQuestionnaireId;                                                                                      // 39\n  }(),                                                                                                                 // 39\n  sensors: function () {                                                                                               // 43\n    function sensors() {                                                                                               // 43\n      return Sensors.find().fetch();                                                                                   // 44\n    }                                                                                                                  // 45\n                                                                                                                       //\n    return sensors;                                                                                                    // 43\n  }()                                                                                                                  // 43\n});                                                                                                                    // 34\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"routes.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// lib/routes.js                                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nAccounts.onLogin(function () {                                                                                         // 1\n  FlowRouter.go('questionnaire-overview');                                                                             // 2\n});                                                                                                                    // 3\n                                                                                                                       //\nAccounts.onLogout(function () {                                                                                        // 5\n  FlowRouter.go('home');                                                                                               // 6\n});                                                                                                                    // 7\n                                                                                                                       //\n// Users that are not logged in should always be redictered to the home page.                                          //\nFlowRouter.triggers.enter([function (context, redirect) {                                                              // 10\n  if (!Meteor.userId()) {                                                                                              // 11\n    FlowRouter.go('home');                                                                                             // 12\n  }                                                                                                                    // 13\n}]);                                                                                                                   // 14\n                                                                                                                       //\nFlowRouter.route('/', {                                                                                                // 16\n  name: 'home',                                                                                                        // 17\n  action: function () {                                                                                                // 18\n    function action() {                                                                                                // 16\n      // if(Meteor.userId()) {                                                                                         //\n      //   FlowRouter.go('questionnaire-overview');                                                                    //\n      // }                                                                                                             //\n      GAnalytics.pageview();                                                                                           // 22\n      BlazeLayout.render('HomeLayout');                                                                                // 23\n    }                                                                                                                  // 24\n                                                                                                                       //\n    return action;                                                                                                     // 16\n  }()                                                                                                                  // 16\n});                                                                                                                    // 16\n                                                                                                                       //\nFlowRouter.route('/about', {                                                                                           // 27\n  name: 'about',                                                                                                       // 28\n  action: function () {                                                                                                // 29\n    function action() {                                                                                                // 27\n      GAnalytics.pageview();                                                                                           // 30\n      BlazeLayout.render('About', { main: 'About' });                                                                  // 31\n    }                                                                                                                  // 32\n                                                                                                                       //\n    return action;                                                                                                     // 27\n  }()                                                                                                                  // 27\n});                                                                                                                    // 27\n                                                                                                                       //\nFlowRouter.route('/questionnaire-overview', {                                                                          // 35\n  name: 'questionnaire-overview',                                                                                      // 36\n  action: function () {                                                                                                // 37\n    function action() {                                                                                                // 35\n      GAnalytics.pageview();                                                                                           // 38\n      BlazeLayout.render('MainLayout', { main: 'Questionnaires' });                                                    // 39\n    }                                                                                                                  // 40\n                                                                                                                       //\n    return action;                                                                                                     // 35\n  }()                                                                                                                  // 35\n});                                                                                                                    // 35\n                                                                                                                       //\nFlowRouter.route('/questionnaire/:id', {                                                                               // 43\n  name: 'questionnaire-single',                                                                                        // 44\n  action: function () {                                                                                                // 45\n    function action() {                                                                                                // 43\n      GAnalytics.pageview();                                                                                           // 46\n      BlazeLayout.render('MainLayout', { main: 'QuestionnaireSingle' });                                               // 47\n    }                                                                                                                  // 48\n                                                                                                                       //\n    return action;                                                                                                     // 43\n  }()                                                                                                                  // 43\n});                                                                                                                    // 43\n                                                                                                                       //\nFlowRouter.route('/questionnaire/:id/sensor', {                                                                        // 51\n  name: 'questionnaire-single-sensor',                                                                                 // 52\n  action: function () {                                                                                                // 53\n    function action() {                                                                                                // 51\n      GAnalytics.pageview();                                                                                           // 54\n      BlazeLayout.render('MainLayout', { main: 'QuestionnaireSingleSensor' });                                         // 55\n    }                                                                                                                  // 56\n                                                                                                                       //\n    return action;                                                                                                     // 51\n  }()                                                                                                                  // 51\n});                                                                                                                    // 51\n                                                                                                                       //\nFlowRouter.route('/questionnaire/:id/configuration', {                                                                 // 59\n  name: 'questionnaire-single-config',                                                                                 // 60\n  action: function () {                                                                                                // 61\n    function action() {                                                                                                // 59\n      GAnalytics.pageview();                                                                                           // 62\n      BlazeLayout.render('MainLayout', { main: 'QuestionnaireSingleConfig' });                                         // 63\n    }                                                                                                                  // 64\n                                                                                                                       //\n    return action;                                                                                                     // 59\n  }()                                                                                                                  // 59\n});                                                                                                                    // 59\n                                                                                                                       //\nFlowRouter.route('/questionnaire/:id/export', {                                                                        // 67\n  name: 'questionnaire-single-export',                                                                                 // 68\n  action: function () {                                                                                                // 69\n    function action() {                                                                                                // 67\n      GAnalytics.pageview();                                                                                           // 70\n      BlazeLayout.render('MainLayout', { main: 'QuestionnaireSingleExport' });                                         // 71\n    }                                                                                                                  // 72\n                                                                                                                       //\n    return action;                                                                                                     // 67\n  }()                                                                                                                  // 67\n});                                                                                                                    // 67\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"Questionnaires.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// collections/Questionnaires.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nQuestionnaires = new Mongo.Collection('questionnaires');                                                               // 1\n                                                                                                                       //\nQuestionnaires.allow({                                                                                                 // 3\n  insert: function () {                                                                                                // 4\n    function insert(userId, doc) {                                                                                     // 4\n      return !!userId;                                                                                                 // 5\n    }                                                                                                                  // 6\n                                                                                                                       //\n    return insert;                                                                                                     // 4\n  }(),                                                                                                                 // 4\n  update: function () {                                                                                                // 7\n    function update(userId, doc) {                                                                                     // 7\n      return !!userId;                                                                                                 // 8\n    }                                                                                                                  // 9\n                                                                                                                       //\n    return update;                                                                                                     // 7\n  }()                                                                                                                  // 7\n});                                                                                                                    // 3\n                                                                                                                       //\nSingleCheckbox = new SimpleSchema({                                                                                    // 12\n  option: {                                                                                                            // 13\n    type: String,                                                                                                      // 14\n    label: \"Option\",                                                                                                   // 15\n    optional: true                                                                                                     // 16\n  }                                                                                                                    // 13\n});                                                                                                                    // 12\n                                                                                                                       //\nSingleQuestion = new SimpleSchema({                                                                                    // 20\n  name: {                                                                                                              // 21\n    type: String,                                                                                                      // 22\n    label: \"Question\"                                                                                                  // 23\n  },                                                                                                                   // 21\n  instructions: {                                                                                                      // 25\n    type: String,                                                                                                      // 26\n    label: \"Instructions\",                                                                                             // 27\n    optional: true                                                                                                     // 28\n  },                                                                                                                   // 25\n  timeout: {                                                                                                           // 30\n    type: Number,                                                                                                      // 31\n    label: \"Expiration threshold\",                                                                                     // 32\n    defaultValue: 0,                                                                                                   // 33\n    optional: true,                                                                                                    // 34\n    min: 0                                                                                                             // 35\n  },                                                                                                                   // 30\n  type: {                                                                                                              // 37\n    type: String,                                                                                                      // 38\n    label: \"Question type\",                                                                                            // 39\n    optional: true,                                                                                                    // 40\n    autoform: {                                                                                                        // 41\n      type: \"select\",                                                                                                  // 42\n      options: function () {                                                                                           // 43\n        function options() {                                                                                           // 43\n          return [{ label: \"Free Text\", value: \"Free Text\" }, { label: \"Multiple Choice\", value: \"Multiple Choice\" }, { label: \"Slider\", value: \"Slider\" }];\n        }                                                                                                              // 49\n                                                                                                                       //\n        return options;                                                                                                // 43\n      }()                                                                                                              // 43\n    }                                                                                                                  // 41\n  },                                                                                                                   // 37\n  checkboxes: {                                                                                                        // 52\n    type: [SingleCheckbox],                                                                                            // 53\n    optional: true                                                                                                     // 54\n  },                                                                                                                   // 52\n  // Slider                                                                                                            //\n  minValue: {                                                                                                          // 57\n    type: Number,                                                                                                      // 58\n    label: \"Minimum value\",                                                                                            // 59\n    optional: true,                                                                                                    // 60\n    defaultValue: 0                                                                                                    // 61\n  },                                                                                                                   // 57\n  maxValue: {                                                                                                          // 63\n    type: Number,                                                                                                      // 64\n    label: \"Maximum value\",                                                                                            // 65\n    optional: true,                                                                                                    // 66\n    defaultValue: 0                                                                                                    // 67\n  }                                                                                                                    // 63\n});                                                                                                                    // 20\n                                                                                                                       //\nConfiguration = new SimpleSchema({                                                                                     // 71\n  startDate: {                                                                                                         // 72\n    type: Date,                                                                                                        // 73\n    // autoform: {                                                                                                     //\n    //     type: \"bootstrap-datepicker\",                                                                               //\n    //     datePickerOptions: {                                                                                        //\n    //         format: \"dd/mm/yyyy\",                                                                                   //\n    //         autoclose: true                                                                                         //\n    //     }                                                                                                           //\n    // },                                                                                                              //\n    label: \"Study start date\",                                                                                         // 81\n    optional: true                                                                                                     // 82\n  },                                                                                                                   // 72\n  endDate: {                                                                                                           // 84\n    type: Date,                                                                                                        // 85\n    label: \"Study end date\",                                                                                           // 86\n    optional: true                                                                                                     // 87\n  }                                                                                                                    // 84\n});                                                                                                                    // 71\n                                                                                                                       //\nSingleSensor = new SimpleSchema({                                                                                      // 91\n  sensorType: {                                                                                                        // 92\n    type: String                                                                                                       // 93\n  },                                                                                                                   // 92\n  sensorActive: {                                                                                                      // 95\n    type: Boolean,                                                                                                     // 96\n    label: \"Do you want to enable this option?\",                                                                       // 97\n    autoform: {                                                                                                        // 98\n      type: \"boolean-radios\",                                                                                          // 99\n      trueLabel: \"Enabled\",                                                                                            // 100\n      falseLabel: \"Disabled\",                                                                                          // 101\n      value: false                                                                                                     // 102\n    }                                                                                                                  // 98\n  },                                                                                                                   // 95\n  frequency: {                                                                                                         // 105\n    type: Number,                                                                                                      // 106\n    label: \"Frequency (in microsends)\",                                                                                // 107\n    optional: true                                                                                                     // 108\n  }                                                                                                                    // 105\n});                                                                                                                    // 91\n                                                                                                                       //\nQuestionnaireSchema = new SimpleSchema({                                                                               // 112\n  name: {                                                                                                              // 113\n    type: String,                                                                                                      // 114\n    label: \"Name\"                                                                                                      // 115\n  },                                                                                                                   // 113\n  description: {                                                                                                       // 117\n    type: String,                                                                                                      // 118\n    label: \"Description\"                                                                                               // 119\n  },                                                                                                                   // 117\n  questions: {                                                                                                         // 121\n    type: [SingleQuestion],                                                                                            // 122\n    label: \"\",                                                                                                         // 123\n    optional: true                                                                                                     // 124\n  },                                                                                                                   // 121\n  configuration: {                                                                                                     // 126\n    type: [Configuration],                                                                                             // 127\n    optional: true                                                                                                     // 128\n  },                                                                                                                   // 126\n  sensors: {                                                                                                           // 130\n    type: [SingleSensor],                                                                                              // 131\n    optional: true                                                                                                     // 132\n  },                                                                                                                   // 130\n  author: {                                                                                                            // 134\n    type: String,                                                                                                      // 135\n    label: \"Author\",                                                                                                   // 136\n    autoValue: function () {                                                                                           // 137\n      function autoValue() {                                                                                           // 137\n        return this.userId;                                                                                            // 138\n      }                                                                                                                // 139\n                                                                                                                       //\n      return autoValue;                                                                                                // 137\n    }(),                                                                                                               // 137\n    autoform: {                                                                                                        // 140\n      type: \"hidden\"                                                                                                   // 141\n    }                                                                                                                  // 140\n  },                                                                                                                   // 134\n  createdAt: {                                                                                                         // 144\n    type: Date,                                                                                                        // 145\n    label: \"Created at\",                                                                                               // 146\n    autoValue: function () {                                                                                           // 147\n      function autoValue() {                                                                                           // 147\n        return new Date();                                                                                             // 148\n      }                                                                                                                // 149\n                                                                                                                       //\n      return autoValue;                                                                                                // 147\n    }(),                                                                                                               // 147\n    autoform: {                                                                                                        // 150\n      type: \"hidden\"                                                                                                   // 151\n    }                                                                                                                  // 150\n  }                                                                                                                    // 144\n});                                                                                                                    // 112\n                                                                                                                       //\nMeteor.methods({                                                                                                       // 156\n  deleteQuestionnaire: function () {                                                                                   // 157\n    function deleteQuestionnaire(id) {                                                                                 // 157\n      Questionnaires.remove(id);                                                                                       // 158\n    }                                                                                                                  // 159\n                                                                                                                       //\n    return deleteQuestionnaire;                                                                                        // 157\n  }()                                                                                                                  // 157\n});                                                                                                                    // 156\n                                                                                                                       //\nQuestionnaires.attachSchema(QuestionnaireSchema);                                                                      // 162\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Sensors.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// collections/Sensors.js                                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSensors = new Mongo.Collection('sensors');                                                                             // 1\n                                                                                                                       //\nSensors.allow({                                                                                                        // 3\n  insert: function () {                                                                                                // 4\n    function insert(userId, doc) {                                                                                     // 4\n      return !!userId;                                                                                                 // 5\n    }                                                                                                                  // 6\n                                                                                                                       //\n    return insert;                                                                                                     // 4\n  }()                                                                                                                  // 4\n});                                                                                                                    // 3\n                                                                                                                       //\nSensorSchema = new SimpleSchema({                                                                                      // 9\n  type: {                                                                                                              // 10\n    type: String                                                                                                       // 11\n  },                                                                                                                   // 10\n  active: {                                                                                                            // 13\n    type: Boolean,                                                                                                     // 14\n    defaultValue: false                                                                                                // 15\n  },                                                                                                                   // 13\n  frequency: {                                                                                                         // 17\n    type: Number,                                                                                                      // 18\n    label: \"Frequency (in microsends)\"                                                                                 // 19\n  }                                                                                                                    // 17\n});                                                                                                                    // 9\n                                                                                                                       //\nSensors.attachSchema(SensorSchema);                                                                                    // 23\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"main.js\":[\"meteor/meteor\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// main.js                                                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});                                            // 1\n                                                                                                                       //\nMeteor.startup(function () {                                                                                           // 3\n  // code to run on server at startup                                                                                  //\n});                                                                                                                    // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},{\"extensions\":[\".js\",\".json\",\".html\"]});\nrequire(\"./client/layouts/template.About.js\");\nrequire(\"./client/layouts/template.HomeLayout.js\");\nrequire(\"./client/layouts/template.MainLayout.js\");\nrequire(\"./client/partials/template.Footer.js\");\nrequire(\"./client/partials/template.Header.js\");\nrequire(\"./client/partials/template.SideNav.js\");\nrequire(\"./client/partials/template.SingleQuestionnaireNav.js\");\nrequire(\"./client/questionnaires/template.NewQuestionnaire.js\");\nrequire(\"./client/questionnaires/template.QuestionnaireSingle.js\");\nrequire(\"./client/questionnaires/template.QuestionnaireSingleConfig.js\");\nrequire(\"./client/questionnaires/template.QuestionnaireSingleExport.js\");\nrequire(\"./client/questionnaires/template.QuestionnaireSingleSensor.js\");\nrequire(\"./client/questionnaires/template.Questionnaires.js\");\nrequire(\"./client/questionnaires/template.SingleQuestionnaire.js\");\nrequire(\"./lib/routes.js\");\nrequire(\"./client/partials/SingleQuestionnaireNav.js\");\nrequire(\"./client/questionnaires/QuestionnaireSingle.js\");\nrequire(\"./client/questionnaires/QuestionnaireSingleConfig.js\");\nrequire(\"./client/questionnaires/QuestionnaireSingleExport.js\");\nrequire(\"./client/questionnaires/QuestionnaireSingleJSON.js\");\nrequire(\"./client/questionnaires/QuestionnaireSingleSensor.js\");\nrequire(\"./client/questionnaires/Questionnaires.js\");\nrequire(\"./client/questionnaires/SingleQuestionnaire.js\");\nrequire(\"./collections/Questionnaires.js\");\nrequire(\"./collections/Sensors.js\");\nrequire(\"./main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/layouts/template.About.js","/client/layouts/template.HomeLayout.js","/client/layouts/template.MainLayout.js","/client/partials/template.Footer.js","/client/partials/template.Header.js","/client/partials/template.SideNav.js","/client/partials/template.SingleQuestionnaireNav.js","/client/partials/SingleQuestionnaireNav.js","/client/questionnaires/template.NewQuestionnaire.js","/client/questionnaires/template.QuestionnaireSingle.js","/client/questionnaires/template.QuestionnaireSingleConfig.js","/client/questionnaires/template.QuestionnaireSingleExport.js","/client/questionnaires/template.QuestionnaireSingleSensor.js","/client/questionnaires/template.Questionnaires.js","/client/questionnaires/template.SingleQuestionnaire.js","/client/questionnaires/QuestionnaireSingle.js","/client/questionnaires/QuestionnaireSingleConfig.js","/client/questionnaires/QuestionnaireSingleExport.js","/client/questionnaires/QuestionnaireSingleSensor.js","/client/questionnaires/Questionnaires.js","/client/questionnaires/SingleQuestionnaire.js","/lib/routes.js","/collections/Questionnaires.js","/collections/Sensors.js","/main.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;ACxBA,SAAS,sBAAT,CAAgC,SAAhC,CAA0C,YAAW;AACnD,MAAI,OAAO,IAAX;AACA,OAAK,OAAL,CAAa,YAAW;AACtB,QAAI,KAAK,WAAW,QAAX,CAAoB,IAApB,CAAT;AACA,SAAK,SAAL,CAAe,qBAAf,EAAsC,EAAtC;AACD,GAHD;AAID,CAND;;AAQA,SAAS,sBAAT,CAAgC,OAAhC,CAAwC;AACtC;AAAe,6BAAK;AAClB,UAAI,KAAK,WAAW,QAAX,CAAoB,IAApB,CAAT;AACA,aAAO,eAAe,OAAf,CAAuB,EAAC,KAAK,EAAN,EAAvB,CAAP;AACD;;AAHD;AAAA;AADsC,CAAxC,0H;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6H;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"/app.js","sourcesContent":["\nTemplate.__checkName(\"About\");\nTemplate[\"About\"] = new Template(\"Template.About\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"Header\")), HTML.Raw('\\n  <main>\\n    <div class=\"billboard\">\\n      <h2>Create ESM magic</h2>\\n    </div>\\n\\n    <div class=\"main-layout\">\\n      <h3>About</h3>\\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque accumsan, justo vitae tristique finibus, velit nisl molestie enim, ac pretium orci eros vel elit. Proin at neque in arcu vehicula vestibulum eu et velit. Nullam quis massa sed mi aliquam aliquam eget laoreet quam. Duis vehicula in ante at dictum. Vivamus rhoncus non purus in convallis. Mauris lobortis mollis nisi, a iaculis elit. Pellentesque vel velit nec arcu cursus varius. Integer maximus molestie maximus.</p>\\n    </div>\\n  </main>\\n  '), Spacebars.include(view.lookupTemplate(\"Footer\")) ];\n}));\n","\nTemplate.__checkName(\"HomeLayout\");\nTemplate[\"HomeLayout\"] = new Template(\"Template.HomeLayout\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"Header\")), HTML.Raw('\\n  <main>\\n    <div class=\"billboard\">\\n      <h2>Create Advanced Experience Sampling Studies. The Easy Way.</h2>\\n    </div>\\n\\n    <div class=\"main-layout\">\\n      <p class=\"primary\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque accumsan, justo vitae tristique finibus, velit nisl molestie enim, ac pretium orci eros vel elit. Proin at neque in arcu vehicula vestibulum eu et velit.</p>\\n\\n      <div class=\"row\">\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-flag\"></i>ESM Creator</h4>\\n          <p>Create your own <em>Experience Sampling</em> studies using ESM Creator. Based on proven technology ...</p>\\n        </div>\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-magic\"></i>Easy To Use</h4>\\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque accumsan, justo vitae tristique finibus.</p>\\n        </div>\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-lock\"></i>Secure</h4>\\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque accumsan, justo vitae tristique finibus.</p>\\n        </div>\\n      </div>\\n\\n      <div class=\"row\">\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-magic\"></i>Advanced Configuration</h4>\\n          <p>Build </p>\\n        </div>\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-flag\"></i>Open Source</h4>\\n          <p>ESM Creator is completely free to use, and its source code is <a href=\"https://www.github.com\">publicly available</a>.</p>\\n        </div>\\n        <div class=\"col-md-4\">\\n          <h4><i class=\"fa fa-lock\"></i>Secure</h4>\\n        </div>\\n      </div>\\n\\n      <h3>Experience Sampling</h3>\\n      <p>Curabitur sit amet libero laoreet, consequat ex id, scelerisque purus. Nam fermentum purus nec ante viverra, ut placerat orci rutrum. Vestibulum accumsan odio dui, eget blandit neque auctor vitae. Integer sed dignissim nibh, vitae tristique nisi.</p>\\n    </div>\\n  </main>\\n  '), Spacebars.include(view.lookupTemplate(\"Footer\")) ];\n}));\n","\nTemplate.__checkName(\"MainLayout\");\nTemplate[\"MainLayout\"] = new Template(\"Template.MainLayout\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"Header\")), \"\\n  \", HTML.MAIN({\n    \"class\": \"main-layout\"\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"main\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  }), \"\\n  \"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"Footer\")) ];\n}));\n","\nTemplate.__checkName(\"Footer\");\nTemplate[\"Footer\"] = new Template(\"Template.Footer\", (function() {\n  var view = this;\n  return HTML.Raw(\"<footer>\\n    <br>\\n    <div>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\\n    </div>\\n  </footer>\");\n}));\n","\nTemplate.__checkName(\"Header\");\nTemplate[\"Header\"] = new Template(\"Template.Header\", (function() {\n  var view = this;\n  return HTML.HEADER(\"\\n    \", HTML.NAV({\n    \"class\": \"main-nav\"\n  }, \"\\n      \", HTML.Raw('<h1><a href=\"/\">Home</a></h1>'), \"\\n\\n      \", HTML.Raw('<h1><a href=\"/about\">About</a></h1>'), \"\\n\\n      \", HTML.Raw('<h1><a href=\"/questionnaire-overview\">Questionnaire overview</a></h1>'), \"\\n\\n      \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n    \"), \"\\n  \");\n}));\n","\nTemplate.__checkName(\"SideNav\");\nTemplate[\"SideNav\"] = new Template(\"Template.SideNav\", (function() {\n  var view = this;\n  return HTML.Raw('<nav class=\"side-nav\">\\n      <li>\\n        <a href=\"/questionnaire-overview\">Overview</a>\\n      </li>\\n      <li>\\n        <a href=\"/questionnaire-sensors\">Sensors</a>\\n      </li>\\n      <li>\\n        <a href=\"/questionnaire-configuration\">Configuation</a>\\n      </li>\\n  </nav>');\n}));\n","\nTemplate.__checkName(\"SingleQuestionnaireNav\");\nTemplate[\"SingleQuestionnaireNav\"] = new Template(\"Template.SingleQuestionnaireNav\", (function() {\n  var view = this;\n  return HTML.NAV({\n    \"class\": \"questionnaire-nav\"\n  }, \"\\n    \", HTML.LI(\"\\n      \", HTML.A({\n    href: function() {\n      return [ \"/questionnaire/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"_id\")) ];\n    }\n  }, \"Overview\"), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      \", HTML.A({\n    href: function() {\n      return [ \"/questionnaire/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"_id\")), \"/sensor\" ];\n    }\n  }, \"Sensors\"), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      \", HTML.A({\n    href: function() {\n      return [ \"/questionnaire/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"_id\")), \"/configuration\" ];\n    }\n  }, \"Configuation\"), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      \", HTML.A({\n    href: function() {\n      return [ \"/questionnaire/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"_id\")), \"/export\" ];\n    }\n  }, \"Export\"), \"\\n    \"), HTML.Raw('\\n    <li>\\n      <a href=\"/questionnaire-overview\">Return to Overview</a>\\n    </li>\\n  '));\n}));\n","Template.SingleQuestionnaireNav.onCreated(function() {\n  var self = this;\n  self.autorun(function() {\n    var id = FlowRouter.getParam('id');\n    self.subscribe('singleQuestionnaire', id);\n  });\n});\n\nTemplate.SingleQuestionnaireNav.helpers({\n  questionnaire: ()=> {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  }\n});\n","\nTemplate.__checkName(\"NewQuestionnaire\");\nTemplate[\"NewQuestionnaire\"] = new Template(\"Template.NewQuestionnaire\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"recipe\"\n  }, HTML.Raw(\"\\n    <h3>New questionnaire</h3>\\n\\n    \"), Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Questionnaires\"),\n      id: Spacebars.call(\"updateQuestionnaireId\"),\n      type: Spacebars.call(\"insert\"),\n      \"class\": Spacebars.call(\"new-recipe-form\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\\n      \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"name\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\n      \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"description\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\n      \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"author\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\n      \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"createdAt\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\n      \", HTML.DIV(\"\\n        \", HTML.BUTTON({\n        type: \"submit\"\n      }, \"Add Questionnaire\"), \"\\n      \"), \"\\n    \" ];\n    });\n  }), HTML.Raw('\\n\\n\\n    <!-- {{> quickForm collection=\"Questionnaires\" id=\"insertRecipeForm\" type=\"insert\" class=\"new-recipe-form\"}} -->\\n  '));\n}));\n","\nTemplate.__checkName(\"QuestionnaireSingle\");\nTemplate[\"QuestionnaireSingle\"] = new Template(\"Template.QuestionnaireSingle\", (function() {\n  var view = this;\n  return [ HTML.H1(Blaze.View(\"lookup:questionnaire.name\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"name\"));\n  })), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaireNav\")), \"\\n\\n  \", HTML.DIV({\n    \"class\": \"new-recipe-container\"\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Questionnaires\"),\n      id: Spacebars.call(\"updateQuestionnaireId\"),\n      type: Spacebars.call(\"update\"),\n      doc: Spacebars.call(view.lookup(\"questionnaire\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\\n    \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"name\"),\n          template: Spacebars.call(\"bootstrap3-horizontal\"),\n          \"label-class\": Spacebars.call(\"col-sm-3\"),\n          \"input-col-class\": Spacebars.call(\"col-sm-9\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\n    \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"description\"),\n          template: Spacebars.call(\"bootstrap3-horizontal\"),\n          \"label-class\": Spacebars.call(\"col-sm-3\"),\n          \"input-col-class\": Spacebars.call(\"col-sm-9\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\n\\n    \", HTML.LABEL(\"Questions\"), \"\\n\\n    \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"questions\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {\n          return [ \"\\n      \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"name\")),\n              template: Spacebars.call(\"bootstrap3-horizontal\"),\n              \"label-class\": Spacebars.call(\"col-sm-3\"),\n              \"input-col-class\": Spacebars.call(\"col-sm-9\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\\n      \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"instructions\")),\n              template: Spacebars.call(\"bootstrap3-horizontal\"),\n              \"label-class\": Spacebars.call(\"col-sm-3\"),\n              \"input-col-class\": Spacebars.call(\"col-sm-9\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\\n      \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"timeout\")),\n              template: Spacebars.call(\"bootstrap3-horizontal\"),\n              \"label-class\": Spacebars.call(\"col-sm-3\"),\n              \"input-col-class\": Spacebars.call(\"col-sm-9\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\\n      \", HTML.Comment('\\n      <label class=\"help\">Question</label>{{> afFieldInput name=this.current.name}}\\n      <label class=\"help\">Question instruction</label>{{> afFieldInput name=this.current.instructions}}\\n      <label class=\"help\">Question timeout</label>{{> afFieldInput name=this.current.timeout}}\\n       '), \"\\n\\n      \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"type\")),\n              template: Spacebars.call(\"bootstrap3-horizontal\"),\n              \"label-class\": Spacebars.call(\"col-sm-3\"),\n              \"input-col-class\": Spacebars.call(\"col-sm-9\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\\n      \", Blaze.If(function() {\n            return Spacebars.dataMustache(view.lookup(\"afFieldValueIs\"), Spacebars.kw({\n              name: Spacebars.dot(view.lookup(\".\"), \"current\", \"type\"),\n              value: \"Multiple Choice\"\n            }));\n          }, function() {\n            return [ \"\\n        \", Blaze._TemplateWith(function() {\n              return {\n                name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"checkboxes\"))\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {\n                return [ \"\\n          \", Blaze._TemplateWith(function() {\n                  return {\n                    name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"option\")),\n                    template: Spacebars.call(\"bootstrap3-horizontal\"),\n                    \"label-class\": Spacebars.call(\"col-sm-2 col-sm-offset-3\"),\n                    \"input-col-class\": Spacebars.call(\"col-sm-6\")\n                  };\n                }, function() {\n                  return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n                }), \"\\n          \", HTML.BUTTON({\n                  \"class\": \"btn btn-primary autoform-remove-item\",\n                  \"data-autoform-field\": \"items\"\n                }, \"x\"), \"\\n        \" ];\n              });\n            }), \"\\n        \", HTML.BUTTON({\n              \"class\": \"btn btn-primary autoform-add-item col-sm-offset-5 col-sm-7\",\n              \"data-autoform-field\": function() {\n                return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"current\", \"checkboxes\"));\n              }\n            }, \"Add option\"), \"\\n      \" ];\n          }), \"\\n      \", Blaze.If(function() {\n            return Spacebars.dataMustache(view.lookup(\"afFieldValueIs\"), Spacebars.kw({\n              name: Spacebars.dot(view.lookup(\".\"), \"current\", \"type\"),\n              value: \"Slider\"\n            }));\n          }, function() {\n            return [ \"\\n        \", Blaze._TemplateWith(function() {\n              return {\n                name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"minValue\")),\n                template: Spacebars.call(\"bootstrap3-horizontal\"),\n                \"label-class\": Spacebars.call(\"col-sm-4 col-sm-offset-3\"),\n                \"input-col-class\": Spacebars.call(\"col-sm-5\")\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n            }), \"\\n        \", Blaze._TemplateWith(function() {\n              return {\n                name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"maxValue\")),\n                template: Spacebars.call(\"bootstrap3-horizontal\"),\n                \"label-class\": Spacebars.call(\"col-sm-4 col-sm-offset-3\"),\n                \"input-col-class\": Spacebars.call(\"col-sm-5\")\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n            }), \"\\n      \" ];\n          }), \"\\n\\n      \", HTML.BR(), \"\\n\\n      \", HTML.BUTTON({\n            \"class\": \"btn btn-primary autoform-remove-item\",\n            \"data-autoform-field\": \"items\"\n          }, \"Remove question\"), \"\\n\\n      \", HTML.HR({\n            style: \"border-bottom:1px solid #000;\"\n          }), \"\\n    \" ];\n        });\n      }), \"\\n\\n    \", HTML.BUTTON({\n        \"class\": \"btn btn-primary autoform-add-item\",\n        \"data-autoform-field\": \"questions\"\n      }, \"Add question\"), \"\\n\\n    \", HTML.BUTTON({\n        type: \"submit\"\n      }, \"Submit\"), \"\\n    \" ];\n    });\n  }), \"\\n  \") ];\n}));\n","\nTemplate.__checkName(\"QuestionnaireSingleConfig\");\nTemplate[\"QuestionnaireSingleConfig\"] = new Template(\"Template.QuestionnaireSingleConfig\", (function() {\n  var view = this;\n  return [ HTML.H1(Blaze.View(\"lookup:questionnaire.name\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"name\"));\n  })), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaireNav\")), \"\\n\\n  \", HTML.DIV({\n    \"class\": \"new-recipe-container\"\n  }, \"\\n    \", HTML.Raw(\"<h2>Configuration</h2>\"), \"\\n\\n    \", HTML.Raw(\"<h3>Questionnaire start and end date</h3>\"), \"\\n    \", HTML.Raw('<!-- {{> quickForm collection=\"Questionnaires\" id=\"updateQuestionnaireId\" type=\"update\" doc=questionnaire class=\"new-recipe-form\"}} -->'), \"\\n\\n    \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Questionnaires\"),\n      id: Spacebars.call(\"updateQuestionnaireId\"),\n      type: Spacebars.call(\"update\"),\n      doc: Spacebars.call(view.lookup(\"questionnaire\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n      \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"configuration\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\n      \", HTML.DIV(\"\\n        \", HTML.BUTTON({\n        type: \"submit\"\n      }, \"Submit\"), \"\\n      \"), \"\\n\\n    \" ];\n    });\n  }), \"\\n\\n  \") ];\n}));\n","\nTemplate.__checkName(\"QuestionnaireSingleExport\");\nTemplate[\"QuestionnaireSingleExport\"] = new Template(\"Template.QuestionnaireSingleExport\", (function() {\n  var view = this;\n  return [ HTML.H1(Blaze.View(\"lookup:questionnaire.name\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"name\"));\n  })), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaireNav\")), HTML.Raw('\\n\\n  <div>\\n    <h2>Export Questionnaire</h2>\\n\\n    <p>Test questionnaire in AWARE.</p>\\n\\n    <button>Export to AWARE</button>\\n\\n    <div id=\"qrcode\"></div>\\n\\n  </div>') ];\n}));\n","\nTemplate.__checkName(\"QuestionnaireSingleSensor\");\nTemplate[\"QuestionnaireSingleSensor\"] = new Template(\"Template.QuestionnaireSingleSensor\", (function() {\n  var view = this;\n  return [ HTML.H1(Blaze.View(\"lookup:questionnaire.name\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionnaire\"), \"name\"));\n  })), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaireNav\")), \"\\n\\n  \", HTML.DIV({\n    \"class\": \"new-recipe-container\"\n  }, \"\\n    \", HTML.Raw(\"<h2>Sensor magic</h2>\"), \"\\n\\n    \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Questionnaires\"),\n      type: Spacebars.call(\"update\"),\n      doc: Spacebars.call(view.lookup(\".\")),\n      id: Spacebars.call(\"FieldValueIsForm\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\\n      \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"sensors\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {\n          return [ \"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"sensorType\"))\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n          }), \"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"sensorActive\"))\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n          }), \"\\n      \" ];\n        });\n      }), \"\\n\\n\", HTML.Comment('\\n\\n      {{> afQuickField name=\"GUCCI.$.sensorActive\" noselect=true }}\\n\\n      {{> afQuickField name=\"CHANEL\" noselect=true }}\\n\\n      {{> afQuickField name=\"GUCCI\" noselect=true }}\\n\\n      {{#each sensors}}\\n\\n        <h3>{{this.type}}</h3>\\n\\n\\n\\n        {{#if afFieldValueIs name=\"sensorType\" value=\"GUCCI\"}}\\n           {{> afQuickField name=\"shotsTaken\"}}\\n        {{/if}}\\n\\n\\n        {{> afQuickField name=\"sensors.$.sensorActive\" noselect=true }}\\n\\n        {{#if afFieldValueIs type=\"CHANEL\" value=true}}\\n          {{> afQuickField name=\"sensors.$.frequency\" value=this.frequency}}\\n        {{/if}}\\n      {{/each}}\\n\\n      {{#if afFieldValueIs name=\"sensors.$.sensorType\" value=\"CHANEL\"}}\\n        {{> afQuickField name=\"frequency\"}}\\n      {{/if}}\\n'), \"\\n      \", HTML.DIV(\"\\n        \", HTML.BUTTON({\n        type: \"submit\"\n      }, \"Submit\"), \"\\n      \"), \"\\n    \" ];\n    });\n  }), \"\\n  \") ];\n}));\n","\nTemplate.__checkName(\"Questionnaires\");\nTemplate[\"Questionnaires\"] = new Template(\"Template.Questionnaires\", (function() {\n  var view = this;\n  return [ HTML.SECTION({\n    \"class\": \"questionnaires\"\n  }, \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.templateInstance().subscriptionsReady());\n  }, function() {\n    return [ \"\\n      \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"questionnaires\"));\n    }, function() {\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"SingleQuestionnaire\")), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n      \", HTML.P(\"Loading\"), \"\\n    \" ];\n  }), \"\\n  \"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"NewQuestionnaire\")) ];\n}));\n","\nTemplate.__checkName(\"SingleQuestionnaire\");\nTemplate[\"SingleQuestionnaire\"] = new Template(\"Template.SingleQuestionnaire\", (function() {\n  var view = this;\n  return HTML.ARTICLE({\n    \"class\": \"recipe\"\n  }, \"\\n    \", HTML.H3(Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \"\\n    \", HTML.P(Blaze.View(\"lookup:description\", function() {\n    return Spacebars.mustache(view.lookup(\"description\"));\n  })), \"\\n    \", HTML.P({\n    \"class\": \"meta\"\n  }, \"Created \", Blaze.View(\"lookup:formatDate\", function() {\n    return Spacebars.mustache(view.lookup(\"formatDate\"), view.lookup(\"createdAt\"));\n  }), \".\"), \"\\n\\n    \", Blaze.View(\"lookup:nrQuestionnaires\", function() {\n    return Spacebars.mustache(view.lookup(\"nrQuestionnaires\"));\n  }), HTML.Raw('\\n    <!-- <p>\\n      {{#each questions}}\\n        <span class=\"ingredient\">{{name}} - {{type}}</span>\\n      {{/each}}\\n    </p> -->\\n    '), HTML.A({\n    href: function() {\n      return [ \"/questionnaire/\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  }, \"View Details\"), HTML.Raw('\\n\\n    <i class=\"fa fa-trash\"></i>\\n  '));\n}));\n","Template.QuestionnaireSingle.onCreated(function() {\n  var self = this;\n  self.autorun(function() {\n    var id = FlowRouter.getParam('id');\n    self.subscribe('singleQuestionnaire', id);\n  });\n});\n\nTemplate.QuestionnaireSingle.helpers({\n  questionnaire: ()=> {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  },\n  updateQuestionnaireId: function() {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  }\n});\n","Template.QuestionnaireSingleConfig.onCreated(function() {\n  var self = this;\n  self.autorun(function() {\n    var id = FlowRouter.getParam('id');\n    self.subscribe('singleQuestionnaire', id);\n  });\n});\n\nTemplate.QuestionnaireSingleConfig.helpers({\n  questionnaire: ()=> {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  },\n  updateQuestionnaireId: function() {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  }\n});\n","Template.QuestionnaireSingleExport.onCreated(function() {\n  var self = this;\n  self.autorun(function() {\n    var id = FlowRouter.getParam('id');\n    self.subscribe('singleQuestionnaire', id);\n  });\n});\n\nTemplate.QuestionnaireSingleExport.onRendered(function() {\n  $('#qrcode').qrcode({text: 'http://www.google.com'});\n})\n\nTemplate.QuestionnaireSingleExport.helpers({\n  questionnaire: ()=> {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  }\n});\n","Template.QuestionnaireSingleSensor.onCreated(function() {\n  var self = this;\n  self.autorun(function() {\n    var id = FlowRouter.getParam('id');\n    self.subscribe('singleQuestionnaire', id);\n  });\n});\n\nTemplate.QuestionnaireSingleSensor.helpers({\n  questionnaire: ()=> {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  },\n  updateQuestionnaireId: function() {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  }\n});\n\nTemplate.registerHelper(\"currentFieldValue\", function (fieldName) {\n  return AutoForm.getFieldValue(\"reactiveCurrentValueForm\", fieldName) || \"not selected\";\n});\n\nTemplate.registerHelper(\"currentFieldValue2\", function (fieldName) {\n  return AutoForm.getFieldValue(fieldName) || \"empty\";\n});\n","Template.Questionnaires.onCreated(function() {\n  var self = this;\n  self.autorun(function() {\n    self.subscribe('questionnaires')\n  });\n});\n\nTemplate.Questionnaires.helpers({\n  questionnaires: ()=> {\n    return Questionnaires.find({});\n  },\n  updateQuestionnaireId: function() {\n    return this._id;\n  }\n});\n","Template.SingleQuestionnaire.events({\n  'click .fa-trash' : function() {\n    Meteor.call('deleteQuestionnaire', this._id);\n  }\n});\n\n\n\n\n\n\n\n\nTemplate.SingleQuestionnaire.helpers({\n  nrQuestionnaires: function() {\n    var id = FlowRouter.getParam('id');\n\n    var questionnaire = Questionnaires.findOne({_id: id});\n\n    console.log(questionnaire + \"TEST\");\n\n\n    return Questionnaires.findOne({_id: id});\n  }\n});\n\n\nTemplate.registerHelper('formatDate', function(date) {\n  return moment(date).format('Do of MMMM, YYYY');\n});\n\n\n\nTemplate.QuestionnaireSingleSensor.helpers({\n  questionnaire: ()=> {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  },\n  updateQuestionnaireId: function() {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  },\n  sensors: function() {\n    return Sensors.find().fetch();\n  }\n});\n","Accounts.onLogin(function() {\n  FlowRouter.go('questionnaire-overview');\n});\n\nAccounts.onLogout(function() {\n  FlowRouter.go('home');\n});\n\n// Users that are not logged in should always be redictered to the home page.\nFlowRouter.triggers.enter([function(context, redirect){\n  if(!Meteor.userId()) {\n    FlowRouter.go('home');\n  }\n}]);\n\nFlowRouter.route('/', {\n  name: 'home',\n  action() {\n    // if(Meteor.userId()) {\n    //   FlowRouter.go('questionnaire-overview');\n    // }\n    GAnalytics.pageview();\n    BlazeLayout.render('HomeLayout');\n  }\n});\n\nFlowRouter.route('/about', {\n  name: 'about',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('About', {main: 'About'});\n  }\n});\n\nFlowRouter.route('/questionnaire-overview', {\n  name: 'questionnaire-overview',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'Questionnaires'});\n  }\n});\n\nFlowRouter.route('/questionnaire/:id', {\n  name: 'questionnaire-single',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'QuestionnaireSingle'});\n  }\n});\n\nFlowRouter.route('/questionnaire/:id/sensor', {\n  name: 'questionnaire-single-sensor',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'QuestionnaireSingleSensor'});\n  }\n});\n\nFlowRouter.route('/questionnaire/:id/configuration', {\n  name: 'questionnaire-single-config',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'QuestionnaireSingleConfig'});\n  }\n});\n\nFlowRouter.route('/questionnaire/:id/export', {\n  name: 'questionnaire-single-export',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'QuestionnaireSingleExport'});\n  }\n});\n","Questionnaires = new Mongo.Collection('questionnaires');\n\nQuestionnaires.allow({\n  insert: function(userId, doc) {\n    return !!userId;\n  },\n  update: function(userId, doc) {\n    return !!userId;\n  }\n});\n\nSingleCheckbox = new SimpleSchema({\n  option: {\n    type: String,\n    label: \"Option\",\n    optional: true\n  }\n});\n\nSingleQuestion = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Question\"\n  },\n  instructions: {\n    type: String,\n    label: \"Instructions\",\n    optional: true\n  },\n  timeout: {\n    type: Number,\n    label: \"Expiration threshold\",\n    defaultValue: 0,\n    optional: true,\n    min: 0\n  },\n  type: {\n    type: String,\n    label: \"Question type\",\n    optional: true,\n    autoform: {\n      type: \"select\",\n      options: function () {\n        return [\n          {label: \"Free Text\", value: \"Free Text\"},\n          {label: \"Multiple Choice\", value: \"Multiple Choice\"},\n          {label: \"Slider\", value: \"Slider\"}\n        ];\n      }\n    }\n  },\n  checkboxes: {\n    type: [SingleCheckbox],\n    optional: true\n  },\n  // Slider\n  minValue: {\n    type: Number,\n    label: \"Minimum value\",\n    optional: true,\n    defaultValue: 0\n  },\n  maxValue: {\n    type: Number,\n    label: \"Maximum value\",\n    optional: true,\n    defaultValue: 0\n  }\n});\n\nConfiguration = new SimpleSchema({\n  startDate: {\n    type: Date,\n    // autoform: {\n    //     type: \"bootstrap-datepicker\",\n    //     datePickerOptions: {\n    //         format: \"dd/mm/yyyy\",\n    //         autoclose: true\n    //     }\n    // },\n    label: \"Study start date\",\n    optional: true\n  },\n  endDate: {\n    type: Date,\n    label: \"Study end date\",\n    optional: true\n  }\n});\n\nSingleSensor = new SimpleSchema({\n  sensorType: {\n    type: String\n  },\n  sensorActive: {\n    type: Boolean,\n    label: \"Do you want to enable this option?\",\n    autoform:{\n        type: \"boolean-radios\",\n        trueLabel: \"Enabled\",\n        falseLabel: \"Disabled\",\n        value: false\n    }\n  },\n  frequency: {\n    type: Number,\n    label: \"Frequency (in microsends)\",\n    optional: true\n  }\n});\n\nQuestionnaireSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n  description: {\n    type: String,\n    label: \"Description\"\n  },\n  questions: {\n    type: [SingleQuestion],\n    label: \"\",\n    optional: true\n  },\n  configuration: {\n    type: [Configuration],\n    optional: true\n  },\n  sensors: {\n     type: [SingleSensor],\n     optional: true\n  },\n  author: {\n    type: String,\n    label: \"Author\",\n    autoValue: function() {\n      return this.userId\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  createdAt: {\n    type: Date,\n    label: \"Created at\",\n    autoValue: function() {\n      return new Date()\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\nMeteor.methods({\n  deleteQuestionnaire: function(id) {\n    Questionnaires.remove(id);\n  }\n});\n\nQuestionnaires.attachSchema(QuestionnaireSchema);\n","Sensors = new Mongo.Collection('sensors');\n\nSensors.allow({\n  insert: function(userId, doc) {\n    return !!userId;\n  }\n});\n\nSensorSchema = new SimpleSchema({\n  type: {\n    type: String\n  },\n  active: {\n    type: Boolean,\n    defaultValue: false\n  },\n  frequency: {\n    type: Number,\n    label: \"Frequency (in microsends)\"\n  }\n});\n\nSensors.attachSchema(SensorSchema);\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]