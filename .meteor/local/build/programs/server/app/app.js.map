{"version":3,"sources":["meteor://ðŸ’»app/lib/routes.js","meteor://ðŸ’»app/collections/Questionnaires.js","meteor://ðŸ’»app/collections/Sensors.js","meteor://ðŸ’»app/server/init.js","meteor://ðŸ’»app/server/publish.js","meteor://ðŸ’»app/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["Accounts.onLogin(function() {\n  FlowRouter.go('questionnaire-overview');\n});\n\nAccounts.onLogout(function() {\n  FlowRouter.go('home');\n});\n\n// Users that are not logged in should always be redictered to the home page.\nFlowRouter.triggers.enter([function(context, redirect){\n  if(!Meteor.userId()) {\n    FlowRouter.go('home');\n  }\n}]);\n\nFlowRouter.route('/', {\n  name: 'home',\n  action() {\n    // if(Meteor.userId()) {\n    //   FlowRouter.go('questionnaire-overview');\n    // }\n    GAnalytics.pageview();\n    BlazeLayout.render('HomeLayout');\n  }\n});\n\nFlowRouter.route('/about', {\n  name: 'about',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('About', {main: 'About'});\n  }\n});\n\nFlowRouter.route('/questionnaire-overview', {\n  name: 'questionnaire-overview',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'Questionnaires'});\n  }\n});\n\nFlowRouter.route('/questionnaire/:id', {\n  name: 'questionnaire-single',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'QuestionnaireSingle'});\n  }\n});\n\nFlowRouter.route('/questionnaire/:id/sensor', {\n  name: 'questionnaire-single-sensor',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'QuestionnaireSingleSensor'});\n  }\n});\n\nFlowRouter.route('/questionnaire/:id/configuration', {\n  name: 'questionnaire-single-config',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'QuestionnaireSingleConfig'});\n  }\n});\n\nFlowRouter.route('/questionnaire/:id/export', {\n  name: 'questionnaire-single-export',\n  action() {\n    GAnalytics.pageview();\n    BlazeLayout.render('MainLayout', {main: 'QuestionnaireSingleExport'});\n  }\n});\n","Questionnaires = new Mongo.Collection('questionnaires');\n\nQuestionnaires.allow({\n  insert: function(userId, doc) {\n    return !!userId;\n  },\n  update: function(userId, doc) {\n    return !!userId;\n  }\n});\n\nSingleCheckbox = new SimpleSchema({\n  option: {\n    type: String,\n    label: \"Option\",\n    optional: true\n  }\n});\n\nSingleQuestion = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Question\"\n  },\n  instructions: {\n    type: String,\n    label: \"Instructions\",\n    optional: true\n  },\n  timeout: {\n    type: Number,\n    label: \"Expiration threshold\",\n    defaultValue: 0,\n    optional: true,\n    min: 0\n  },\n  type: {\n    type: String,\n    label: \"Question type\",\n    optional: true,\n    autoform: {\n      type: \"select\",\n      options: function () {\n        return [\n          {label: \"Free Text\", value: \"Free Text\"},\n          {label: \"Multiple Choice\", value: \"Multiple Choice\"},\n          {label: \"Slider\", value: \"Slider\"}\n        ];\n      }\n    }\n  },\n  checkboxes: {\n    type: [SingleCheckbox],\n    optional: true\n  },\n  // Slider\n  minValue: {\n    type: Number,\n    label: \"Minimum value\",\n    optional: true,\n    defaultValue: 0\n  },\n  maxValue: {\n    type: Number,\n    label: \"Maximum value\",\n    optional: true,\n    defaultValue: 0\n  }\n});\n\nConfiguration = new SimpleSchema({\n  startDate: {\n    type: Date,\n    // autoform: {\n    //     type: \"bootstrap-datepicker\",\n    //     datePickerOptions: {\n    //         format: \"dd/mm/yyyy\",\n    //         autoclose: true\n    //     }\n    // },\n    label: \"Study start date\",\n    optional: true\n  },\n  endDate: {\n    type: Date,\n    label: \"Study end date\",\n    optional: true\n  }\n});\n\nSingleSensor = new SimpleSchema({\n  sensorType: {\n    type: String\n  },\n  sensorActive: {\n    type: Boolean,\n    label: \"Do you want to enable this option?\",\n    autoform:{\n        type: \"boolean-radios\",\n        trueLabel: \"Enabled\",\n        falseLabel: \"Disabled\",\n        value: false\n    }\n  },\n  frequency: {\n    type: Number,\n    label: \"Frequency (in microsends)\",\n    optional: true\n  }\n});\n\nQuestionnaireSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n  description: {\n    type: String,\n    label: \"Description\"\n  },\n  questions: {\n    type: [SingleQuestion],\n    label: \"\",\n    optional: true\n  },\n  configuration: {\n    type: [Configuration],\n    optional: true\n  },\n  sensors: {\n     type: [SingleSensor],\n     optional: true\n  },\n  author: {\n    type: String,\n    label: \"Author\",\n    autoValue: function() {\n      return this.userId\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  createdAt: {\n    type: Date,\n    label: \"Created at\",\n    autoValue: function() {\n      return new Date()\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\nMeteor.methods({\n  deleteQuestionnaire: function(id) {\n    Questionnaires.remove(id);\n  }\n});\n\nQuestionnaires.attachSchema(QuestionnaireSchema);\n","Sensors = new Mongo.Collection('sensors');\n\nSensors.allow({\n  insert: function(userId, doc) {\n    return !!userId;\n  }\n});\n\nSensorSchema = new SimpleSchema({\n  type: {\n    type: String\n  },\n  active: {\n    type: Boolean,\n    defaultValue: false\n  },\n  frequency: {\n    type: Number,\n    label: \"Frequency (in microsends)\"\n  }\n});\n\nSensors.attachSchema(SensorSchema);\n","Meteor.startup(function() {\n  // Populate Sensors collection if empty\n  if (Sensors.find().count() === 0) {\n    Sensors.insert({\n      type: 'CHANEL',\n      active: false,\n      frequency: '23'\n    });\n\n    Sensors.insert({\n      type: 'GUCCI',\n      frequency: '36'\n    });\n\n    Sensors.insert({\n      type: 'COACH',\n      frequency: '99'\n    });\n  }\n});\n\n\n// AutoForm.addHooks(['updateQuestionnaireId'],\n// {\n//   formToModifier: function(modifier) {\n//     if (modifier.$set.comments) {\n//       modifier.$set.comments = _.compact(modifier.$set.comments);\n//     }\n//     return modifier;\n//   }\n// });\n// https://github.com/aldeed/meteor-autoform/issues/1049\n","Meteor.publish('questionnaires', function(){\n  return Questionnaires.find({author: this.userId});\n});\n\nMeteor.publish('sensors', function(){\n  return Sensors.find();\n});\n\nMeteor.publish('singleQuestionnaire', function(id){\n  check(id, String);\n  return Questionnaires.find({_id: id});\n});\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}