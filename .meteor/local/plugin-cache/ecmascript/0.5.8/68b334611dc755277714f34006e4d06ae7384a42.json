{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/questionnaires/SingleQuestionnaire.js","filenameRelative":"/client/questionnaires/SingleQuestionnaire.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/questionnaires/SingleQuestionnaire.js.map","sourceFileName":"/client/questionnaires/SingleQuestionnaire.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"SingleQuestionnaire"},"ignored":false,"code":"Template.SingleQuestionnaire.events({\n  'click .fa-trash': function () {\n    function clickFaTrash() {\n      Meteor.call('deleteQuestionnaire', this._id);\n    }\n\n    return clickFaTrash;\n  }()\n});\n\nTemplate.SingleQuestionnaire.helpers({\n  nrQuestionnaires: function () {\n    function nrQuestionnaires() {\n      var id = FlowRouter.getParam('id');\n\n      var questionnaire = Questionnaires.findOne({ _id: id });\n\n      console.log(questionnaire + \"TEST\");\n\n      return Questionnaires.findOne({ _id: id });\n    }\n\n    return nrQuestionnaires;\n  }()\n});\n\nTemplate.registerHelper('formatDate', function (date) {\n  return moment(date).format('Do of MMMM, YYYY');\n});\n\nTemplate.QuestionnaireSingleSensor.helpers({\n  questionnaire: function () {\n    function questionnaire() {\n      var id = FlowRouter.getParam('id');\n      return Questionnaires.findOne({ _id: id });\n    }\n\n    return questionnaire;\n  }(),\n  updateQuestionnaireId: function () {\n    function updateQuestionnaireId() {\n      var id = FlowRouter.getParam('id');\n      return Questionnaires.findOne({ _id: id });\n    }\n\n    return updateQuestionnaireId;\n  }(),\n  sensors: function () {\n    function sensors() {\n      return Sensors.find().fetch();\n    }\n\n    return sensors;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/client/questionnaires/SingleQuestionnaire.js"],"names":[],"mappings":"AAAA,SAAS,mBAAT,CAA6B,MAA7B,CAAoC;AAClC;AAAoB,4BAAW;AAC7B,aAAO,IAAP,CAAY,qBAAZ,EAAmC,KAAK,GAAxC;AACD;;AAFD;AAAA;AADkC,CAApC;;AAaA,SAAS,mBAAT,CAA6B,OAA7B,CAAqC;AACnC;AAAkB,gCAAW;AAC3B,UAAI,KAAK,WAAW,QAAX,CAAoB,IAApB,CAAT;;AAEA,UAAI,gBAAgB,eAAe,OAAf,CAAuB,EAAC,KAAK,EAAN,EAAvB,CAApB;;AAEA,cAAQ,GAAR,CAAY,gBAAgB,MAA5B;;AAGA,aAAO,eAAe,OAAf,CAAuB,EAAC,KAAK,EAAN,EAAvB,CAAP;AACD;;AATD;AAAA;AADmC,CAArC;;AAcA,SAAS,cAAT,CAAwB,YAAxB,EAAsC,UAAS,IAAT,EAAe;AACnD,SAAO,OAAO,IAAP,EAAa,MAAb,CAAoB,kBAApB,CAAP;AACD,CAFD;;AAMA,SAAS,yBAAT,CAAmC,OAAnC,CAA2C;AACzC;AAAe,6BAAK;AAClB,UAAI,KAAK,WAAW,QAAX,CAAoB,IAApB,CAAT;AACA,aAAO,eAAe,OAAf,CAAuB,EAAC,KAAK,EAAN,EAAvB,CAAP;AACD;;AAHD;AAAA,KADyC;AAKzC;AAAuB,qCAAW;AAChC,UAAI,KAAK,WAAW,QAAX,CAAoB,IAApB,CAAT;AACA,aAAO,eAAe,OAAf,CAAuB,EAAC,KAAK,EAAN,EAAvB,CAAP;AACD;;AAHD;AAAA,KALyC;AASzC;AAAS,uBAAW;AAClB,aAAO,QAAQ,IAAR,GAAe,KAAf,EAAP;AACD;;AAFD;AAAA;AATyC,CAA3C","file":"/client/questionnaires/SingleQuestionnaire.js.map","sourcesContent":["Template.SingleQuestionnaire.events({\n  'click .fa-trash' : function() {\n    Meteor.call('deleteQuestionnaire', this._id);\n  }\n});\n\n\n\n\n\n\n\n\nTemplate.SingleQuestionnaire.helpers({\n  nrQuestionnaires: function() {\n    var id = FlowRouter.getParam('id');\n\n    var questionnaire = Questionnaires.findOne({_id: id});\n\n    console.log(questionnaire + \"TEST\");\n\n\n    return Questionnaires.findOne({_id: id});\n  }\n});\n\n\nTemplate.registerHelper('formatDate', function(date) {\n  return moment(date).format('Do of MMMM, YYYY');\n});\n\n\n\nTemplate.QuestionnaireSingleSensor.helpers({\n  questionnaire: ()=> {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  },\n  updateQuestionnaireId: function() {\n    var id = FlowRouter.getParam('id');\n    return Questionnaires.findOne({_id: id});\n  },\n  sensors: function() {\n    return Sensors.find().fetch();\n  }\n});\n"]},"hash":"68b334611dc755277714f34006e4d06ae7384a42"}
